name: CI
on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
      branch:
        required: true
        type: string
      aws-region:
        required: false
        type: string
        default: ap-southeast-1
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    container: node:16-alpine
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.branch }}
      - run: |
          npm ci
          tar -czf /tmp/app.tar .
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: /tmp/app.tar
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: app
      - run: tar -xzf app.tar && rm app.tar
      - run: |
          if [ ${{ startsWith(inputs.branch, 'v') }} == true ]
          then
            tag=`echo "${{ inputs.branch }}" | sed "s/^v/""/"`
            echo "::set-output name=tags::${{ inputs.repository }}:$tag,${{ inputs.repository }}:latest"
          else
            echo "::set-output name=tags::${{ inputs.repository }}:dev-${{ inputs.branch }}"
          fi
        id: make-tags
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.make-tags.outputs.tags }}
